generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Devices {
  devId           String          @id @db.VarChar(100)
  wardId          String          @db.VarChar(100)
  devSerial       String          @unique @db.VarChar(100)
  devName         String          @unique @db.VarChar(500)
  devDetail       String?         @db.VarChar(500)
  devStatus       Boolean         @default(false)
  devSeq          Int             @unique @db.Int
  devZone         String?         @db.VarChar(155)
  installLocation String?         @db.VarChar(250)
  locationPic     String?         @db.VarChar(200)
  installDate     DateTime?       @default(now())
  devIp           String?         @db.VarChar(16)
  devMacAddEth    String?         @db.VarChar(12)
  devMacAddWiFi   String?         @db.VarChar(12)
  devSubNet       String?         @db.VarChar(12)
  devGetway       String?         @db.VarChar(12)
  devDns          String?         @db.VarChar(12)
  firmwareVersion String?         @db.VarChar(55)
  invoice         String?         @db.VarChar(50)
  createBy        String?         @db.VarChar(100)
  comment         String?         @db.VarChar(155)
  backupStatus    String?         @default("0") @db.Char(1)
  moveStatus      String?         @db.VarChar(100)
  alarn           Boolean         @default(false)
  duration        Int?            @db.Int
  sim             String?         @db.VarChar(100)
  backToNormal    Boolean?        @default(false)
  repeat          Int             @default(0) @db.Int
  notification    Boolean         @default(true)
  sendEmail       String?         @db.VarChar(100)
  topic           String?         @db.VarChar(100)
  createAt        DateTime        @default(now())
  updateAt        DateTime        @default(now()) @updatedAt
  ward            Wards           @relation(fields: [wardId], references: [wardId])
  noti            Notifications[]
  log             LogDays[]
  repair          Repairs[]
  warranty        Warranties[]
  probe           Probes[]
}

model Probes {
  probeId    String   @id @db.VarChar(100)
  probeName  String   @db.VarChar(255)
  probeType  String   @db.VarChar(20)
  probCh     String   @db.Char(1)
  tempMin    Float    @default(0.00) @db.Float
  tempMax    Float    @default(0.00) @db.Float
  humMin     Float    @default(0.00) @db.Float
  humMax     Float    @default(0.00) @db.Float
  adjustTemp Float    @default(0.00) @db.Float
  adjustHum  Float    @default(0.00) @db.Float
  delayTime  String?  @db.VarChar(11)
  door       String?  @default("1") @db.VarChar(11)
  devId      String   @db.VarChar(100)
  createAt   DateTime @default(now())
  updateAt   DateTime @default(now()) @updatedAt
  device     Devices  @relation(fields: [devId], references: [devId])
}

model Hospitals {
  hosId         String   @id @db.VarChar(100)
  hosName       String   @db.VarChar(155)
  hosAddress    String?  @db.VarChar(155)
  hosTelephone  String?  @db.VarChar(100)
  userContact   String?  @db.VarChar(155)
  userTelePhone String?  @db.VarChar(100)
  hosLatitude   String?  @db.VarChar(155)
  hosLongitude  String?  @db.VarChar(155)
  hosPic        String?  @db.VarChar(255)
  createAt      DateTime @default(now())
  updateAt      DateTime @default(now()) @updatedAt
  ward          Wards[]
}

model Wards {
  wardId   String    @id @db.VarChar(100)
  wardName String    @db.VarChar(250)
  wardSeq  Int       @unique @db.Int
  hosId    String    @db.VarChar(100)
  createAt DateTime  @default(now())
  updateAt DateTime  @default(now()) @updatedAt
  hospital Hospitals @relation(fields: [hosId], references: [hosId])
  user     Users[]
  device   Devices[]
}

model Users {
  userId       String   @id @db.VarChar(100)
  wardId       String   @db.VarChar(100)
  userName     String   @unique @db.VarChar(155)
  userPassword String   @db.VarChar(155)
  userStatus   Boolean  @default(true)
  userLevel    String   @default("4") @db.Char(1)
  displayName  String?  @db.VarChar(150)
  userPic      String?  @db.VarChar(255)
  comment      String?  @db.VarChar(255)
  createBy     String?  @db.VarChar(155)
  createAt     DateTime @default(now())
  updateAt     DateTime @default(now()) @updatedAt
  ward         Wards    @relation(fields: [wardId], references: [wardId])
  role         Roles    @relation(fields: [userLevel], references: [roleId])
}

model Roles {
  roleId       String   @id @db.Char(1)
  roleName     String   @db.VarChar(500)
  rolePriority String   @default("4") @db.Char(1)
  createAt     DateTime @default(now())
  updateAt     DateTime @default(now()) @updatedAt
  user         Users[]
}

model Notifications {
  notiId     String   @id @db.VarChar(100)
  devId      String   @db.VarChar(100)
  notiDetail String   @db.VarChar(255)
  notiStatus Boolean  @default(false)
  createAt   DateTime @default(now())
  updateAt   DateTime @default(now()) @updatedAt
  device     Devices  @relation(fields: [devId], references: [devId])
}

model Repairs {
  repairId       String   @id @db.VarChar(100)
  devId          String   @db.VarChar(100)
  repairInfo     String?  @db.VarChar(155)
  repairLocation String?  @db.VarChar(155)
  ward           String?  @db.VarChar(155)
  repairDetails  String?  @db.VarChar(155)
  telePhone      String?  @db.VarChar(11)
  repairStatus   String?  @db.VarChar(155)
  warrantyStatus String?  @db.Char(1)
  comment        String?  @db.VarChar(155)
  baseStatus     String?  @default("0") @db.Char(1)
  createAt       DateTime @default(now())
  updateAt       DateTime @default(now()) @updatedAt
  device         Devices  @relation(fields: [devId], references: [devId])
}

model Warranties {
  warrId     String   @id @db.VarChar(100)
  devName    String   @db.VarChar(100)
  expire     DateTime @default(now())
  warrStatus Boolean  @default(false)
  createAt   DateTime @default(now())
  updateAt   DateTime @default(now()) @updatedAt
  device     Devices  @relation(fields: [devName], references: [devName])
}

model LogDays {
  logId         String   @id @db.VarChar(100)
  devId         String   @db.VarChar(100)
  tempValue     Float    @default(0.00)
  tempAvg       Float    @default(0.00)
  humidityValue Float    @default(0.00)
  humidityAvg   Float    @default(0.00)
  sendTime      DateTime @default(now())
  ac            String   @default("0") @db.Char(10)
  door1         Boolean  @default(false)
  door2         Boolean  @default(false)
  door3         Boolean  @default(false)
  internet      Boolean  @default(false)
  probe         String   @default("0") @db.VarChar(10)
  battery       Int      @default(0)
  ambient       Float?   @default(0.00)
  sdCard        Boolean  @default(false)
  eventCounts   String?  @default("C000000000000000") @db.VarChar(20)
  createAt      DateTime @default(now())
  updateAt      DateTime @default(now()) @updatedAt
  device        Devices  @relation(fields: [devId], references: [devId])
}

model LogDaysBackup {
  logId         String   @id @db.VarChar(100)
  devId         String   @db.VarChar(100)
  tempValue     Float    @default(0.00)
  tempAvg       Float    @default(0.00)
  humidityValue Float    @default(0.00)
  humidityAvg   Float    @default(0.00)
  sendTime      DateTime @default(now())
  ac            String   @default("0") @db.Char(10)
  door1         Boolean  @default(false)
  door2         Boolean  @default(false)
  door3         Boolean  @default(false)
  internet      Boolean  @default(false)
  probe         String   @default("0") @db.VarChar(10)
  battery       Int      @default(0)
  ambient       Float?   @default(0.00)
  sdCard        Boolean  @default(false)
  eventCounts   String?  @default("C000000000000000") @db.VarChar(20)
  createAt      DateTime @default(now())
  updateAt      DateTime @default(now()) @updatedAt
}
